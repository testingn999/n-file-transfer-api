<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-api-suite.xml" />
	<munit:test name="file-transfer-flow-test" doc:id="2b8bd819-926f-4121-a7fd-1e29c03e2a29" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock source file" doc:id="bd112d4b-292f-4e60-bcf8-9fd1b3aa45e5" processor="file:list">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="source file" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://filetransferflowtest\mock_payload.dwl')]" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="setDate" value="#[output application/java --- readUrl('classpath://filetransferflowtest\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="storeId" value="#[output application/json --- readUrl('classpath://filetransferflowtest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock retrieve storeId" doc:id="e5dda8fe-5032-4131-9db1-56e1f58dfbd9" processor="os:retrieve">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="retrieve storeId" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://filetransferflowtest\mock_payload1.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="setDate" value="#[output application/java --- readUrl('classpath://filetransferflowtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="storeId" value="#[output application/json --- readUrl('classpath://filetransferflowtest\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock source file" doc:id="bd7383b7-95ae-436c-8eb5-767cbb591e31" processor="file:read">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="source file" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output text/csv  --- readUrl('classpath://filetransferflowtest\mock_payload2.dwl')]" mediaType="text/csv " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://filetransferflowtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="setDate" value="#[output application/java --- readUrl('classpath://filetransferflowtest\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="storeId" value="#[output application/json --- readUrl('classpath://filetransferflowtest\mock_variable_5.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy" doc:id="34f610bb-e43f-4aaf-b553-196e1b9e34c1" processor="batch:step">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="validating-input-records" attributeName="name" />
				</munit-tools:with-attributes>
			</munit-tools:spy>
			<munit-tools:spy doc:name="Spy" doc:id="69c9b912-8c44-4795-9b60-def1182379f1" processor="batch:step">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="writing-to-destination-folder" attributeName="name" />
				</munit-tools:with-attributes>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="bf0b58fc-9847-4846-bbe8-df8cf0529050" >
				<munit:payload value="#[readUrl('classpath://filetransferflowtest\set-event_payload1.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to file-transfer-flow" doc:id="661c655e-af4e-4d85-a2c8-7a3f9ff5ee26" name="file-transfer-flow"/>
			<munit-tools:sleep time="0" doc:name="Sleep" doc:id="08450dd1-6a5c-43f3-a0e8-6f8b07f2e965" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="0336234c-355c-4708-b045-3bc93a83a89b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import filetransferflowtest::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
