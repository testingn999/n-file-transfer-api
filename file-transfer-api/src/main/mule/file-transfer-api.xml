<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sharepoint="http://www.mulesoft.org/schema/mule/sharepoint"
	xmlns:module-logging="http://www.mulesoft.org/schema/mule/module-logging" xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/module-logging http://www.mulesoft.org/schema/mule/module-logging/current/mule-module-logging.xsd
http://www.mulesoft.org/schema/mule/sharepoint http://www.mulesoft.org/schema/mule/sharepoint/current/mule-sharepoint.xsd">
	
	<os:object-store name="Object_store" doc:name="Object store" doc:id="55ed2d8e-2860-4010-8196-6a52a5168cca" entryTtl="11" entryTtlUnit="HOURS" expirationIntervalUnit="HOURS"/>
	<flow name="file-transfer-flow" doc:id="1aed387b-15af-4b7d-80ca-4e3d919cfabf" initialState="started">
		<scheduler doc:name="Scheduler" doc:id="2c50cc2f-0e23-47d3-b0ba-463d184044a4" >
			<scheduling-strategy >
				<fixed-frequency frequency="10" timeUnit="DAYS"/>
			</scheduling-strategy>
		</scheduler>
		<logger level="INFO" doc:name="ENTRY" doc:id="50cb8cbf-26f1-4825-9965-05f49ac7d8de" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"logLevel" : "ENTRY",&#10;	"correlationId": correlationId,&#10;	"timeStamp" : ((now() as Date) as String { format: "dd-MM-YYYY"}),&#10;	"message" : "Flow Started"&#10;	&#10;}]'/>
		<set-variable value='#[((now() as Date) as String { format: "dd-MM-YYYY"})]' doc:name="setDate" doc:id="1dd041aa-74ce-4559-aec9-ab141ce169ed" variableName="setDate"/>
		<os:retrieve doc:name="retrieve storeId" doc:id="64429fd6-bd3e-416a-bb2e-0aaebb518560" key="storeId" target="storeId" objectStore="Object_store">
			<os:default-value ><![CDATA[[]]]></os:default-value>
		</os:retrieve>
		<file:list doc:name="source file" doc:id="1a11858c-86f8-4383-ae9d-3bbbfd8d20f4" config-ref="File_Config" directoryPath="Users\321094\Documents\data">
			<file:matcher timeUnit="MINUTES" filenamePattern='#["sourceInventory" ++ "_" ++ vars.setDate ++ ".csv"]' directories="EXCLUDE" symLinks="EXCLUDE"/>
		</file:list>
		<logger level="INFO" doc:name="INFO" doc:id="fd624213-2457-4219-b029-6837fc10b8be" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"logLevel" : "INFO",&#10;	"correlationId": correlationId,&#10;	"timeStamp" : ((now() as Date) as String { format: "dd-MM-YYYY"}),&#10;	"message" : "Source inventory file"&#10;	&#10;}]'/>
		<logger level="DEBUG" doc:name="DEBUG" doc:id="c063870f-6fa8-40d1-bd44-723ffe2ff31d" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"logLevel" : "INFO",&#10;	"correlationId": correlationId,&#10;	"timeStamp" : ((now() as Date) as String { format: "dd-MM-YYYY"}),&#10;	"message" : payload.attributes&#10;	&#10;}]'/>
		<choice doc:name="check if source file is not empty" doc:id="9537ae3c-f1d3-4043-8527-61d968492dd0" >
			<when expression='#[payload.attributes.fileName != null]'>
				<try doc:name="Try" doc:id="d6a5904c-c37b-4f65-a47f-fac3a1317408" >
					<file:read doc:name="source file" doc:id="7bc278d3-815a-45f8-ba4d-057aad00e102" config-ref="File_Config" path='#["Users\\321094\\Documents\\data\\"  ++ payload.attributes.fileName[0]]' lock="true">
					<repeatable-in-memory-stream initialBufferSize="6" bufferSizeIncrement="4" maxBufferSize="10" bufferUnit="MB"/>
					<reconnect />
				</file:read>
					<error-handler >
						<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="58d63b42-33dc-4f3b-a922-858012320fbb" >
							<ee:transform doc:name="Error Details" doc:id="1f77fea4-4fdb-4751-9a90-90fd2405121f" >
								<ee:message />
								<ee:variables >
									<ee:set-variable variableName="errorDetails" ><![CDATA[%dw 2.0
output application/json
---
{
	"TimeStamp": now(),
	"File Name": "sourceInventory" ++ "_" ++ vars.setDate ++ ".csv",
	"File location": "",
	"Correlation Id": correlationId,
	"Error": (error.errorType.asString default "FILE:ERROR") ++ " - " ++ (error.errorMessage default "File is open by other application."),
	"Message": "Please trigger the Mulesoft application manually once the file is closed by other applications. For more error details, check Cloudhub logs with the correlation Id provided."
	
}]]></ee:set-variable>
								</ee:variables>
							</ee:transform>
						</on-error-propagate>
					</error-handler>
				</try>
				<batch:job jobName="file-transfer-batch-job" doc:id="b8046d08-4e85-4689-bea1-fc4bc964aa07" maxFailedRecords="-1" blockSize="1000">
					<batch:process-records >
						<!-- [STUDIO:"INFO"]<logger level="INFO" doc:name="INFO" doc:id="432c0a6b-0279-4f42-baa3-781f03d9697b" message='#[%dw 2.0&#10;output application/json&#10;&#45;&#45;-&#10;{&#10;	"logLevel" : "INFO",&#10;	"correlationId": correlationId,&#10;	"timeStamp" : now() ,&#10;	"message" : "Batch Job - Start"&#10;	&#10;}&#93;' /> [STUDIO] -->
						<batch:step name="validating-input-records" doc:id="e494efbe-6b2d-4ed8-943c-6b93e60fdecd" acceptPolicy="ALL">
							<logger level="DEBUG" doc:name="DEBUG" doc:id="42ecab79-b525-4f94-9f91-997f3188c3e2" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"logLevel" : "Batch Step - Start",&#10;	"correlationId": correlationId,&#10;	"timeStamp" : ((now() as Date) as String { format: "dd-MM-YYYY"}),&#10;	"message" : "Batch Step: validating-input-records"&#10;	&#10;}]' />
							<try doc:name="Try" doc:id="dace489a-59a6-4dd1-8e80-334d98710d72" >
								<ee:transform doc:name="segregate payload" doc:id="c6c428e5-f825-46c1-977d-99b087512f41">
								<ee:message>
									<ee:set-payload><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/json
fun quantityCheck(data) = if ( isNumeric(data) ) isInteger(data) else false
fun conditions(data) = (!(isEmpty(data)) and (vars.storeId contains data.StoreId) and (quantityCheck(data.Quantity)) and (data.Type ~= "Standard" or data.Type ~= "Backorder"))
var validateData = payload map ({
	("ValidData": $) if (conditions($)),
	("InvalidData": $) if !(conditions($))
})
---
{
	("InvalidData": validateData.*InvalidData)if !(isEmpty(validateData.*InvalidData)),
	("ValidData": validateData.*ValidData) if !(isEmpty(validateData.*ValidData))
}


]]></ee:set-payload>
								</ee:message>
							</ee:transform>
								<error-handler >
									<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="b7cb8000-87d7-4dfc-bfe4-5e1b5e791fb9" >
										<async doc:name="Async" doc:id="864ebe32-660e-4295-be23-f10bd27c118d" >
											<ee:transform doc:name="error details" doc:id="4d05fbc5-32dd-404d-984d-e723f026b4fa" >
												<ee:message >
												</ee:message>
												<ee:variables >
													<ee:set-variable variableName="errorDetails" ><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/json
---

{
	statusCode: error.errorMessage.attributes.statusCode default 500,
	flowName: "Batch Step: validating-input-records",
	errorType: error.errorType.asString,
	errorMessage: error.errorMessage.payload,
	errorDetails: if(error.errorType.asString == "MULE:EXPRESSION")
	"There is an error in '" ++ substringBefore(error.failingComponent, "/")
	 ++ "' component. Please check the Cloudhub logs and reach out to Mulesoft team for assistance."
	else 
	error.detailedDescription
}
]]></ee:set-variable>
												</ee:variables>
											</ee:transform>
										</async>
									</on-error-propagate>
								</error-handler>
							</try>
							<logger level="DEBUG" doc:name="DEBUG" doc:id="d3b5df93-d44b-4618-a153-df4114bf80b1" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"logLevel" : "Batch Step - Complete",&#10;	"correlationId": correlationID,&#10;	"timeStamp" : ((now() as Date) as String { format: "dd-MM-YYYY"}),&#10;	"flowName": flow.name,&#10;	"message" : "Batch Step: validating-input-records"&#10;	&#10;}]' />
						</batch:step>
						<batch:step name="writing-to-destination-folder" doc:id="07e4b983-5a5d-4ca3-b224-af7587ea0166" acceptExpression="#[!(isEmpty(payload))]">
							<logger level="DEBUG" doc:name="DEBUG" doc:id="e950fe18-33e8-4549-ab03-7365ea986b67" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"logLevel" : "logLevel" : "Batch Step - Start",&#10;	"correlationId": correlationId,&#10;	"timeStamp" : ((now() as Date) as String { format: "dd-MM-YYYY"}),&#10;	"message" : "Batch Step: writing-to-destination-folder"&#10;	&#10;}]'/>
							<choice doc:name="check if payload not empty" doc:id="2d30901b-3aa0-4ba9-871b-7851e3858782" >
								<when expression="#[!(isEmpty(payload.ValidData))]">
									<ee:transform doc:name="fileName payload" doc:id="a1505422-321f-4bcf-9fc2-b2e051652361" >
										<ee:message >
											<ee:set-payload ><![CDATA[%dw 2.0
output application/csv
---
payload.ValidData]]></ee:set-payload>
										</ee:message>
										<ee:variables >
											<ee:set-variable variableName="fileName" ><![CDATA[output text/plain
---
"inventory_" ++ (payload.ValidData.StoreId joinBy  "") ++ "_" ++ vars.setDate ++ ".csv"]]></ee:set-variable>
										</ee:variables>
									</ee:transform>
								</when>
								<when expression="#[!(isEmpty(payload.InvalidData))]">
									<ee:transform doc:name="fileName payload" doc:id="1c02af1e-b0e7-4f86-9fbd-30464d40669e" >
										<ee:message >
											<ee:set-payload ><![CDATA[%dw 2.0
output application/csv
---
payload.InvalidData]]></ee:set-payload>
										</ee:message>
										<ee:variables >
											<ee:set-variable variableName="fileName" ><![CDATA[output text/plain
---
"inventory_invalidData" ++ vars.setDate ++ ".csv"]]></ee:set-variable>
										</ee:variables>
									</ee:transform>
								</when>
								<otherwise >
									<logger level="INFO" doc:name="INFO" doc:id="9c31594f-676f-4a1b-973a-02e4041ae1e7" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"logLevel" : "INFO",&#10;	"correlationId": correlationId,&#10;	"timeStamp" : ((now() as Date) as String { format: "dd-MM-YYYY"}),&#10;	"message" : "Empty payload"&#10;	&#10;}]'/>
								</otherwise>
							</choice>
							<flow-ref doc:name="write-csv-file" doc:id="cf960e0a-26a9-4bc7-ad4d-9f10d2bcc198" name="write-csv-file"/>
							<logger level="INFO" doc:name="INFO" doc:id="0cf50ff8-682b-4aaf-9d32-a60edb505d86" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"logLevel": "INFO",&#10;	"correlationId": correlationId,&#10;	"timeStamp": ((now() as Date) as String {&#10;		format: "dd-MM-YYYY"&#10;	}),&#10;	"message": if ( !(isEmpty(vars.fileName)) ) (vars.fileName ++ "File written/updated successfully")&#10;	else "File written/updated successfully"&#10;}]' />
							<logger level="DEBUG" doc:name="DEBUG" doc:id="9674bf6e-2f56-4127-8f05-b0cba325283e" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"logLevel" : "logLevel" : "Batch Step - Complete",&#10;	"correlationId": correlationId,&#10;	"timeStamp" : ((now() as Date) as String { format: "dd-MM-YYYY"}),&#10;	"message" : "Batch Step: writing-to-destination-folder"&#10;	&#10;}]' />
						</batch:step>
						<batch:step name="batch-step-failure" doc:id="b4dfd84c-0a0d-422c-9dc1-f18ca166d2fb" acceptPolicy="ONLY_FAILURES">
							<ee:transform doc:name="Transform Message" doc:id="2a977db5-2bf9-4387-9016-a858d8f4a70f" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/json skipNullOn="everywhere"

var batchSteps = ["validating-input-records", "writing-to-destination-folder" ]

fun batchError(be) = batchSteps map 
(if (!(isEmpty(be."$")))
((be."$".."Error type".namespace joinBy "") ++ ":" 
	++ (be."$".."Error type".identifier joinBy ""))
	else null
)
---

payload.InvalidData map ($ ++ { "Error" : batchError(Batch::getStepExceptions())})

//Batch::getStepExceptions()."validating-input-records"..location
//Batch::getStepExceptions()."validating-input-records"..message[0]
]]></ee:set-payload>
								</ee:message>
							</ee:transform>
							<logger level="ERROR" doc:name="ERROR" doc:id="df022ee1-a287-428c-850d-70f070900970" message="#[payload]" />
							<flow-ref doc:name="send-mail" doc:id="eff949e7-dc6d-43a4-9569-33d0e094bbcc" name="send-mail"/>
						</batch:step>
					</batch:process-records>
					<batch:on-complete >
						<logger level="INFO" doc:name="EXIT" doc:id="ee8e2101-1292-4c02-b3b1-02c6c2d78232" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"logLevel" : "EXIT",&#10;	"correlationId": correlationId,&#10;	"timeStamp" : ((now() as Date) as String { format: "dd-MM-YYYY"}),&#10;	"message" : "Flow Completed"&#10;	&#10;}]' />
					</batch:on-complete>
				</batch:job>
			</when>
			<otherwise >
				<ee:transform doc:name="Error Details" doc:id="1f124a25-4e95-478a-a4e1-44a86bf51b9a">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="errorDetails" ><![CDATA[%dw 2.0
output application/json
---
{
	"TimeStamp": now(),
	"File Name": "sourceInventory" ++ "_" ++ vars.setDate ++ ".csv",
	"File location": "",
	"Correlation Id": correlationId,
	"Error": (error.errorType.asString default "FILE:ERROR") ++ " - " ++ (error.errorMessage default "File not found"),
	"Message": "Please trigger the Mulesoft application manually once the file is placed the source location. For more error details, check Cloudhub logs with the correlation Id provided."
	
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<logger level="ERROR" doc:name="ERROR" doc:id="8bbc7273-e5c6-4041-b8f7-7a05db38b95c" message="#[vars.errorDetails]"/>
				<flow-ref doc:name="send-mail" doc:id="fe301ddd-1c27-4085-99bc-7582857ddbfb" name="send-mail"/>
			</otherwise>
		</choice>
		<error-handler ref="global-error-handler" />
	</flow>

</mule>
